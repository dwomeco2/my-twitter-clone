import { type GetServerSideProps, type NextPage } from "next";
import Head from "next/head";
import { signIn, useSession } from "next-auth/react";
import { create } from "mutative";

import { api } from "~/utils/api";
import { getServerAuthSession } from "~/server/auth";
import { useState } from "react";

const Home: NextPage = () => {
  const session = useSession();
  const [postContent, setPostContent] = useState("");

  if (!session.data?.user) {
    return <div>Not signed in</div>;
  }

  const utils = api.useContext();

  const posts = api.example.userPostById.useQuery({
    id: session.data.user.id,
  });

  const createPost = api.example.createPost.useMutation({
    onSuccess: (data) => {
      const key = { id: data.authorId };
      const old = utils.example.userPostById.getData(key);
      if (old) {
        const newData = create(old, (draft) => {
          draft.posts.push(data);
        });
        utils.example.userPostById.setData(key, newData);
      }
    },
  });

  function createPostOnClick() {
    if (postContent.length > 0) {
      createPost.mutate({ content: postContent });
    }
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <button
          type="button"
          className="rounded-md border border-rose-400 bg-transparent px-8 py-2"
          onClick={() => void signIn()}
        >
          sign in with google
        </button>
        <p className="text-2xl text-white">
          {posts.data?.posts.map((post) => {
            return <div key={post.id}>{post.content}</div>;
          })}
        </p>
        <div>
          <input
            type="text"
            value={postContent}
            onChange={(e) => setPostContent(e.target.value)}
          />
          <button
            type="button"
            className="rounded-md border border-rose-400 bg-transparent px-8 py-2"
            onClick={createPostOnClick}
          >
            create Post
          </button>
        </div>
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const session = await getServerAuthSession({ req, res });
  if (!session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
};
